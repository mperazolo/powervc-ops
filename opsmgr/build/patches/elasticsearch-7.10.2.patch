diff -ruN ../elasticsearch.old/buildSrc/src/main/java/org/elasticsearch/gradle/Architecture.java ./buildSrc/src/main/java/org/elasticsearch/gradle/Architecture.java
--- ../elasticsearch.old/buildSrc/src/main/java/org/elasticsearch/gradle/Architecture.java	2021-02-03 18:07:43.070767556 -0500
+++ ./buildSrc/src/main/java/org/elasticsearch/gradle/Architecture.java	2021-02-03 18:27:47.904058191 -0500
@@ -22,7 +22,8 @@
 public enum Architecture {
 
     X64,
-    AARCH64;
+    AARCH64,
+    PPC64LE;
 
     public static Architecture current() {
         final String architecture = System.getProperty("os.arch", "");
@@ -32,6 +33,8 @@
                 return X64;
             case "aarch64":
                 return AARCH64;
+            case "ppc64le":
+                return PPC64LE;
             default:
                 throw new IllegalArgumentException("can not determine architecture from [" + architecture + "]");
         }
diff -ruN ../elasticsearch.old/buildSrc/src/main/java/org/elasticsearch/gradle/Jdk.java ./buildSrc/src/main/java/org/elasticsearch/gradle/Jdk.java
--- ../elasticsearch.old/buildSrc/src/main/java/org/elasticsearch/gradle/Jdk.java	2021-02-03 18:07:43.080768085 -0500
+++ ./buildSrc/src/main/java/org/elasticsearch/gradle/Jdk.java	2021-02-03 18:27:47.904058191 -0500
@@ -35,7 +35,7 @@
 
 public class Jdk implements Buildable, Iterable<File> {
 
-    private static final List<String> ALLOWED_ARCHITECTURES = Collections.unmodifiableList(Arrays.asList("aarch64", "x64"));
+    private static final List<String> ALLOWED_ARCHITECTURES = Collections.unmodifiableList(Arrays.asList("aarch64", "x64", "ppc64le"));
     private static final List<String> ALLOWED_VENDORS = Collections.unmodifiableList(Arrays.asList("adoptopenjdk", "openjdk"));
     private static final List<String> ALLOWED_PLATFORMS = Collections.unmodifiableList(Arrays.asList("darwin", "linux", "windows", "mac"));
     private static final Pattern VERSION_PATTERN = Pattern.compile("(\\d+)(\\.\\d+\\.\\d+)?\\+(\\d+(?:\\.\\d+)?)(@([a-f0-9]{32}))?");
diff -ruN ../elasticsearch.old/distribution/archives/build.gradle ./distribution/archives/build.gradle
--- ../elasticsearch.old/distribution/archives/build.gradle	2021-02-03 18:07:43.330781305 -0500
+++ ./distribution/archives/build.gradle	2021-02-04 13:05:07.675723636 -0500
@@ -143,6 +143,13 @@
     }
   }
 
+  linuxPpc64leTar {
+    archiveClassifier = 'linux-ppc64le'
+    content {
+      archiveFiles(modulesFiles(false, 'linux-ppc64le'), 'tar', 'linux', 'ppc64le', false, true)
+    }
+  }
+
   linuxTar {
     archiveClassifier = 'linux-x86_64'
     content {
@@ -157,6 +164,13 @@
     }
   }
 
+  ossLinuxPpc64leTar {
+    archiveClassifier = 'linux-ppc64le'
+    content {
+      archiveFiles(modulesFiles(true, 'linux-ppc64le'), 'tar', 'linux', 'ppc64le', true, true)
+    }
+  }
+
   ossLinuxTar {
     archiveClassifier = 'linux-x86_64'
     content {
diff -ruN ../elasticsearch.old/distribution/build.gradle ./distribution/build.gradle
--- ../elasticsearch.old/distribution/build.gradle	2021-02-03 18:07:43.330781305 -0500
+++ ./distribution/build.gradle	2021-02-04 10:40:55.822759752 -0500
@@ -304,7 +304,7 @@
   // Setup all required JDKs
   project.jdks {
     ['darwin', 'windows', 'linux'].each { platform ->
-      (platform == 'linux' ? ['x64', 'aarch64'] : ['x64']).each { architecture ->
+      (platform == 'linux' ? ['x64', 'aarch64', 'ppc64le'] : ['x64']).each { architecture ->
         "bundled_${platform}_${architecture}" {
           it.platform = platform
           it.version = VersionProperties.getBundledJdk(platform)
@@ -384,7 +384,7 @@
         } else {
           buildModules = buildDefaultModulesTaskProvider
         }
-        List excludePlatforms = ['linux-x86_64', 'linux-aarch64', 'windows-x86_64', 'darwin-x86_64']
+        List excludePlatforms = ['linux-x86_64', 'linux-ppc64le', 'linux-aarch64', 'windows-x86_64', 'darwin-x86_64']
         if (platform != null) {
           excludePlatforms.remove(excludePlatforms.indexOf(platform))
         } else {
@@ -683,6 +683,7 @@
  'packages:rpm', 'packages:deb',
  'packages:aarch64-rpm', 'packages:aarch64-deb',
  'packages:oss-rpm', 'packages:oss-deb',
+ 'packages:ppc64le-oss-rpm', 'packages:ppc64le-oss-deb',
  'packages:aarch64-oss-rpm', 'packages:aarch64-oss-deb'
 ].forEach { subName ->
   Project subproject = project("${project.path}:${subName}")
diff -ruN ../elasticsearch.old/distribution/docker/build.gradle ./distribution/docker/build.gradle
--- ../elasticsearch.old/distribution/docker/build.gradle	2021-02-03 18:07:43.330781305 -0500
+++ ./distribution/docker/build.gradle	2021-02-04 13:41:00.558629431 -0500
@@ -32,6 +32,8 @@
   if (local) {
     if (architecture == Architecture.AARCH64) {
       classifier = "linux-aarch64"
+    } else if (architecture == Architecture.PPC64LE) {
+      classifier = "linux-aarch64"
     } else if (architecture == Architecture.X64) {
       classifier = "linux-x86_64"
     } else {
@@ -75,7 +77,8 @@
 
 private static String buildPath(Architecture architecture, boolean oss, DockerBase base) {
   return 'build/' +
-    (architecture == Architecture.AARCH64 ? 'aarch64-' : '') +
+//    (architecture == Architecture.AARCH64 ? 'aarch64-' : '') +
+    (architecture != Architecture.X64 ? (architecture.name() + '-') : '') +
     (oss ? 'oss-' : '') +
     (base == DockerBase.UBI ? 'ubi-' : '') +
     'docker'
@@ -83,7 +86,8 @@
 
 private static String taskName(String prefix, Architecture architecture, boolean oss, DockerBase base, String suffix) {
   return prefix +
-    (architecture == Architecture.AARCH64 ? 'Aarch64' : '') +
+//    (architecture == Architecture.AARCH64 ? 'Aarch64' : '') +
+    (architecture != Architecture.X64 ? architecture.name().capitalize() : '') +
     (oss ? 'Oss' : '') +
     (base == DockerBase.UBI ? 'Ubi' : '') +
     suffix
diff -ruN ../elasticsearch.old/distribution/packages/build.gradle ./distribution/packages/build.gradle
--- ../elasticsearch.old/distribution/packages/build.gradle	2021-02-03 18:07:43.330781305 -0500
+++ ./distribution/packages/build.gradle	2021-02-03 18:27:47.504037229 -0500
@@ -108,6 +108,9 @@
     if (type == 'deb') {
       if (architecture == 'x64') {
         arch('amd64')
+      } else if (architecture == 'ppc64le') {
+        assert architecture == 'ppc64le' : architecture
+        arch('ppc64le')
       } else {
         assert architecture == 'aarch64' : architecture
         arch('arm64')
@@ -116,6 +119,9 @@
       assert type == 'rpm' : type
       if (architecture == 'x64') {
         arch('X86_64')
+      } else if (architecture == 'ppc64le') {
+        assert architecture == 'ppc64le' : architecture
+        arch('ppc64le')
       } else {
         assert architecture == 'aarch64' : architecture
         arch('aarch64')
@@ -123,7 +129,7 @@
     }
     // Follow elasticsearch's file naming convention
     String jdkString = jdk ? "" : "no-jdk-"
-    String prefix = "${architecture == 'aarch64' ? 'aarch64-' : ''}${oss ? 'oss-' : ''}${jdk ? '' : 'no-jdk-'}${type}"
+    String prefix = "${architecture != 'x64' ? architecture + '-' : ''}${oss ? 'oss-' : ''}${jdk ? '' : 'no-jdk-'}${type}"
     destinationDirectory = file("${prefix}/build/distributions")
 
     // SystemPackagingTask overrides default archive task convention mappings, but doesn't provide a setter so we have to override the convention mapping itself
@@ -367,6 +373,10 @@
   configure(commonDebConfig(true, true, 'x64'))
 }
 
+tasks.register('buildPpc64leOssDeb', Deb) {
+  configure(commonDebConfig(true, true, 'ppc64le'))
+}
+
 tasks.register('buildNoJdkDeb', Deb) {
   configure(commonDebConfig(false, false, 'x64'))
 }
@@ -420,6 +430,10 @@
   configure(commonRpmConfig(true, true, 'x64'))
 }
 
+tasks.register('buildPpc64leOssRpm', Rpm) {
+  configure(commonRpmConfig(true, true, 'ppc64le'))
+}
+
 tasks.register('buildNoJdkRpm', Rpm) {
   configure(commonRpmConfig(false, false, 'x64'))
 }
diff -ruN ../elasticsearch.old/distribution/packages/ppc64le-oss-deb/build.gradle ./distribution/packages/ppc64le-oss-deb/build.gradle
--- ../elasticsearch.old/distribution/packages/ppc64le-oss-deb/build.gradle	1969-12-31 19:00:00.000000000 -0500
+++ ./distribution/packages/ppc64le-oss-deb/build.gradle	2021-02-03 18:27:47.504037229 -0500
@@ -0,0 +1,2 @@
+// This file is intentionally blank. All configuration of the
+// distribution is done in the parent project.
diff -ruN ../elasticsearch.old/distribution/packages/ppc64le-oss-rpm/build.gradle ./distribution/packages/ppc64le-oss-rpm/build.gradle
--- ../elasticsearch.old/distribution/packages/ppc64le-oss-rpm/build.gradle	1969-12-31 19:00:00.000000000 -0500
+++ ./distribution/packages/ppc64le-oss-rpm/build.gradle	2021-02-03 18:27:47.504037229 -0500
@@ -0,0 +1,2 @@
+// This file is intentionally blank. All configuration of the
+// distribution is done in the parent project.
diff -ruN ../elasticsearch.old/settings.gradle ./settings.gradle
--- ../elasticsearch.old/settings.gradle	2021-02-03 18:07:45.060872789 -0500
+++ ./settings.gradle	2021-02-04 13:03:50.441678937 -0500
@@ -27,30 +27,37 @@
   'distribution:archives:oss-no-jdk-darwin-tar',
   'distribution:archives:no-jdk-darwin-tar',
   'distribution:archives:oss-linux-aarch64-tar',
+  'distribution:archives:oss-linux-ppc64le-tar',
   'distribution:archives:oss-linux-tar',
   'distribution:archives:linux-aarch64-tar',
+  'distribution:archives:linux-ppc64le-tar',
   'distribution:archives:linux-tar',
   'distribution:archives:oss-no-jdk-linux-tar',
   'distribution:archives:no-jdk-linux-tar',
   'distribution:docker',
   'distribution:docker:docker-aarch64-build-context',
   'distribution:docker:docker-aarch64-export',
+  'distribution:docker:docker-ppc64le-export',
   'distribution:docker:docker-build-context',
   'distribution:docker:docker-export',
   'distribution:docker:oss-docker-aarch64-build-context',
   'distribution:docker:oss-docker-aarch64-export',
+  'distribution:docker:oss-docker-ppc64le-export',
   'distribution:docker:oss-docker-build-context',
   'distribution:docker:oss-docker-export',
   'distribution:docker:ubi-docker-aarch64-export',
+  'distribution:docker:ubi-docker-ppc64le-export',
   'distribution:docker:ubi-docker-build-context',
   'distribution:docker:ubi-docker-export',
   'distribution:packages:aarch64-oss-deb',
+  'distribution:packages:ppc64le-oss-deb',
   'distribution:packages:oss-deb',
   'distribution:packages:aarch64-deb',
   'distribution:packages:deb',
   'distribution:packages:oss-no-jdk-deb',
   'distribution:packages:no-jdk-deb',
   'distribution:packages:aarch64-oss-rpm',
+  'distribution:packages:ppc64le-oss-rpm',
   'distribution:packages:oss-rpm',
   'distribution:packages:aarch64-rpm',
   'distribution:packages:rpm',
